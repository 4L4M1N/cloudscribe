
Edge of the Web: Entity Framework Core: The Future of EF for ASP.NET Core
https://channel9.msdn.com/Blogs/DevRadio/DR1644 

Azure Table storage is very low cost which makes it attractive but not sure all the needed query techniques are available
pagination would be challenging or impossible
even simple things like count are difficult
http://stackoverflow.com/questions/28667601/get-the-azure-table-row-count
http://stackoverflow.com/questions/28599511/add-pagination-mvc-and-azure-table-storage


http://jeremybytes.blogspot.com/2014/02/demystifying-var-keyword-in-c.html

C# Reference:
https://msdn.microsoft.com/en-us/library/ms173224.aspx


http://stackoverflow.com/questions/3485317/entity-framework-4-single-vs-first-vs-firstordefault

Find() - when you want to get an item by primary key. This will return null if it can't find an item. It will look in the context before going to the database (as pointed out by Yaron in the comments) which can be an important efficiency factor if you need to get the same entity multiple times while the same context is alive.

Single() - when you expect exactly one item to be returned by a query. This will throw an exception if the query does not return exactly one item.

SingleOrDefault() - when you expect zero or one items to be returned by a query (i.e. you are not sure if an item with a given key exists). This will throw an exception if the query does not return zero or one items.

First() - when you expect one or more items to be returned by a query but you only want to access the first item in your code (ordering could be important in the query here). This will throw an exception if the query does not return at least one item.

FirstOrDefault() - when you expect zero or more items to be returned by a query but you only want to access the first item in your code (i.e. you are not sure if an item with a given key exists)

http://www.mikesdotnetting.com/article/257/entity-framework-recipe-grouping-by-year-and-month

http://stackoverflow.com/questions/818642/singleordefault-how-to-change-the-default-values

http://stackoverflow.com/questions/6033390/what-is-the-most-reasonable-way-to-find-out-if-entity-is-attached-to-dbcontext-o/6037277#6037277
http://stackoverflow.com/questions/10027493/entityframework-code-first-check-if-entity-is-attached


http://ef.readthedocs.org/en/latest/modeling/configuring.html

https://github.com/aspnet/EntityFramework/wiki/Configuring-a-DbContext

https://github.com/aspnet/EntityFramework/wiki/Guiding-Principles

https://github.com/aspnet/EntityFramework/wiki/Security

https://github.com/aspnet/EntityFramework/wiki/Visual-Studio-Publish-Integration

https://github.com/aspnet/EntityFramework/wiki/Writing-an-EF7-Provider

http://blogs.msdn.com/b/adonet/archive/2014/10/27/ef7-v1-or-v7.aspx

http://wildermuth.com/2015/3/17/A_Look_at_ASP_NET_5_Part_3_-_EF7

https://channel9.msdn.com/Blogs/Seth-Juarez/Migrations-in-Entity-Framework-7-with-Brice-Lambson

http://www.jerriepelser.com/blog/moving-entity-framework-7-models-to-external-project

dnx ef migrations add Initial

http://www.jerriepelser.com/blog/resolve-dbcontext-as-interface-in-aspnet5-ioc-container

http://stackoverflow.com/questions/27220714/ramifications-of-using-dbcontext-with-dependency-injection

http://davidzych.com/unit-testing-entity-framework-7-with-the-in-memory-data-store/




dnx ef --help
Entity Framework Commands 7.0.0-rc1-16348

Usage: dnx ef [options] [command]

Options:
  --version     Show version information
  -?|-h|--help  Show help information

Commands:
  database    Commands to manage your database
  dbcontext   Commands to manage your DbContext types
  migrations  Commands to manage your migrations

Use "dnx ef [command] --help" for more information about a command.

dnx ef --help migrations
Entity Framework Commands 7.0.0-rc1-16348

Usage: dnx ef [options] [command]

Options:
  --version     Show version information
  -?|-h|--help  Show help information

Commands:
  database    Commands to manage your database
  dbcontext   Commands to manage your DbContext types
  migrations  Commands to manage your migrations

Use "dnx ef [command] --help" for more information about a command.

dnx ef migrations --help

dnx ef database --help


Usage: dnx ef migrations [options] [command]

Options:
  -?|-h|--help  Show help information

Commands:
  add     Add a new migration
  list    List the migrations
  remove  Remove the last migration
  script  Generate a SQL script from migrations

Use "migrations [command] --help" for more information about a command.

dnx ef migrations add --help

Usage: dnx ef migrations add [arguments] [options]

Arguments:
  [name]  The name of the migration

Options:
  -o|--outputDir                  The directory (and sub-namespace) to use. If omitted, "Migrations" is used.
  -c|--context <context>          The DbContext to use. If omitted, the default DbContext is used
  -p|--targetProject <project>    The project to add the migration to. If omitted, the current project is used.
  -e|--environment <environment>  The environment to use. If omitted, "Development" is used.
  -v|--verbose                    Show verbose output
  -?|-h|--help                    Show help information

dotnet ef migrations add Initial -c CoreDbContext
dotnet ef migrations add Initial -c LoggingDbContext



No parameterless constructor was found on 'LoggingDbContext'. Either add a parameterless constructor to 'LoggingDbContext' or add an impleme
ntation of 'IDbContextFactory<LoggingDbContext>' in the same assembly as 'LoggingDbContext'.

C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>


C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>dotnet ef migrations add Initial -c LoggingDbContext
Project cloudscribe.Logging.Web (.NETStandard,Version=v1.5) was previously compiled. Skipping compilation.
Project cloudscribe.Logging.EF (.NETStandard,Version=v1.5) was previously compiled. Skipping compilation.
This preview of Entity Framework tools does not support targeting class library projects in ASP.NET Core and .NET Core applications. See htt
p://go.microsoft.com/fwlink/?LinkId=798221 for details and workarounds.

C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>



dnx ef database --help


Usage: dnx ef database [options] [command]

Options:
  -?|-h|--help  Show help information

Commands:
  update  Updates the database to a specified migration

Use "database [command] --help" for more information about a command.

dnx ef database update --help

Usage: dnx ef database update [arguments] [options]

Arguments:
  [migration]  The target migration. If '0', all migrations will be reverted. If omitted, all pending migrations will be applied

Options:
  -c|--context <context>          The DbContext to use. If omitted, the default DbContext is used
  -p|--targetProject <project>    The project with the Migration classes. If omitted, the current project is used.
  -e|--environment <environment>  The environment to use. If omitted, "Development" is used.
  -v|--verbose                    Show verbose output
  -?|-h|--help                    Show help information


 
C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>dotnet build
Project cloudscribe.Logging.Web (.NETStandard,Version=v1.5) was previously compiled. Skipping compilation.
Project cloudscribe.Logging.EF (.NETCoreApp,Version=v1.0) will be compiled because inputs were modified
Compiling cloudscribe.Logging.EF for .NETCoreApp,Version=v1.0

Compilation succeeded.
    0 Warning(s)
    0 Error(s)

Time elapsed 00:00:01.8645724



C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>dotnet ef migrations add Initial -c LoggingDbContext
Project cloudscribe.Logging.Web (.NETStandard,Version=v1.5) was previously compiled. Skipping compilation.
Project cloudscribe.Logging.EF (.NETCoreApp,Version=v1.0) was previously compiled. Skipping compilation.
System.IO.FileNotFoundException: The configuration file 'appsettings.json' was not found and is not optional.
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load()
   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build()
   at cloudscribe.Logging.EF.Startup..ctor(IHostingEnvironment env) in C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscr
ibe.Logging.EF\Startup.cs:line 35
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.Invoke(Type type, String[] methodNames, IServiceCollection services)
   at Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.ConfigureServices()
   at Microsoft.EntityFrameworkCore.Design.DbContextOperations..ctor(ILoggerProvider loggerProvider, Assembly assembly, Assembly startupAsse
mbly, String environment, String startupProjectDir)
   at Microsoft.EntityFrameworkCore.Design.MigrationsOperations..ctor(ILoggerProvider loggerProvider, Assembly assembly, AssemblyLoader star
tupAssemblyLoader, Assembly startupAssembly, String environment, String projectDir, String startupProjectDir, String rootNamespace)
   at Microsoft.EntityFrameworkCore.Tools.Cli.OperationExecutor.<>c__DisplayClass4_0.<.ctor>b__4()
   at Microsoft.EntityFrameworkCore.Internal.LazyRef`1.get_Value()
   at Microsoft.EntityFrameworkCore.Tools.Cli.OperationExecutor.AddMigration(String name, String outputDir, String contextType)
   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.Execute(CommonOptions commonOptions, String name, String outputDir, Strin
g context, String environment, Action`1 reporter)
   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.<>c__DisplayClass0_0.<Configure>b__0()
   at Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(String[] args)
   at Microsoft.EntityFrameworkCore.Tools.Cli.Program.Main(String[] args)
The configuration file 'appsettings.json' was not found and is not optional.

C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>


C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>dotnet ef migrations add Initial -c LoggingDbContext
Project cloudscribe.Logging.Web (.NETStandard,Version=v1.5) was previously compiled. Skipping compilation.
Project cloudscribe.Logging.EF (.NETCoreApp,Version=v1.0) was previously compiled. Skipping compilation.
System.InvalidOperationException: No database provider has been configured for this DbContext. A provider can be configured by overriding th
e DbContext.OnConfiguring method or by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure tha
t your DbContext type accepts a DbContextOptions<TContext> object in its constructor and passes it to the base constructor for DbContext.
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at cloudscribe.Logging.EF.LoggingDbContext.OnModelCreating(ModelBuilder modelBuilder) in C:\_joe\__projects\__cloudscribe\rc2\cloudscribe
.Logging\src\cloudscribe.Logging.EF\LoggingDbContext.cs:line 41
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(DbContext context, IConventionSetBuilder conventionSetBuilder, IM
odelValidator validator)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel()
   at Microsoft.EntityFrameworkCore.Internal.LazyRef`1.get_Value()
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ScopedCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ScopedCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ScopedCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_ChangeTracker()
   at cloudscribe.Logging.EF.LoggingDbContext..ctor(DbContextOptions`1 options) in C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\
src\cloudscribe.Logging.EF\LoggingDbContext.cs:line 31
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ScopedCallSite.Invoke(ServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.EntityFrameworkCore.Design.DbContextOperations.<>c__DisplayClass11_2.<FindContextTypes>b__6()
   at Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(Func`1 factory)
   at Microsoft.EntityFrameworkCore.Design.DbContextOperations.CreateContext(String contextType)
   at Microsoft.EntityFrameworkCore.Design.MigrationsOperations.AddMigration(String name, String outputDir, String contextType)
   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.Execute(CommonOptions commonOptions, String name, String outputDir, Strin
g context, String environment, Action`1 reporter)
   at Microsoft.EntityFrameworkCore.Tools.Cli.MigrationsAddCommand.<>c__DisplayClass0_0.<Configure>b__0()
   at Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(String[] args)
   at Microsoft.EntityFrameworkCore.Tools.Cli.Program.Main(String[] args)
No database provider has been configured for this DbContext. A provider can be configured by overriding the DbContext.OnConfiguring method o
r by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure that your DbContext type accepts a Db
ContextOptions<TContext> object in its constructor and passes it to the base constructor for DbContext.

C:\_joe\__projects\__cloudscribe\rc2\cloudscribe.Logging\src\cloudscribe.Logging.EF>



    public void Map(EntityTypeBuilder<Language> entity)
	{
		//entity.ToTable(tableNames.TablePrefix + tableNames.LanguageTableName);
		entity.ForSqlServerToTable(tableNames.TablePrefix + tableNames.LanguageTableName);

		entity.HasKey(p => p.Id);

		entity.Property(p => p.Id)
		   .ForSqlServerHasColumnType("uniqueidentifier")
		   .ForSqlServerHasDefaultValueSql("newid()")
		   ;

		entity.Property(p => p.Name)
		.HasMaxLength(255)
		.IsRequired()
		;

		entity.Property(p => p.Code)
		.HasMaxLength(2)
		.IsRequired()
		;

		entity.Property(p => p.Sort)
		.HasDefaultValue(1)
		;

	}

     migrationBuilder.CreateTable(
		name: "cs_Language",
		columns: table => new
		{
			Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false, defaultValueSql: "newid()"),
			Code = table.Column<string>(nullable: false),
			Name = table.Column<string>(nullable: false),
			Sort = table.Column<int>(nullable: false, defaultValue: 1)
				.Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn)
		},
		constraints: table =>
		{
			table.PrimaryKey("PK_cs_Language", x => x.Id);
		});
