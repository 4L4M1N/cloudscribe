<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AliasId" xml:space="preserve">
    <value>AliasId</value>
  </data>
  <data name="Are you sure you want to delete the site {0} and all related data? You cannot undo this action." xml:space="preserve">
    <value>Are you sure you want to delete the site {0} and all related data? You cannot undo this action.</value>
  </data>
  <data name="Close Site To Public" xml:space="preserve">
    <value>Close Site To Public</value>
  </data>
  <data name="Closed Message" xml:space="preserve">
    <value>Closed Message</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Domain Mappings" xml:space="preserve">
    <value>Domain Mappings</value>
  </data>
  <data name="only digits, numbers, - and _ allowed, no spaces allowed" xml:space="preserve">
    <value>only digits, numbers, - and _ allowed, no spaces allowed</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Site Folder Name" xml:space="preserve">
    <value>Site Folder Name</value>
  </data>
  <data name="Site Name" xml:space="preserve">
    <value>Site Name</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="TimeZone" xml:space="preserve">
    <value>TimeZone</value>
  </data>
  <data name="Add Host Mapping" xml:space="preserve">
    <value>Add Host Mapping</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="Allow New Registrations" xml:space="preserve">
    <value>Allow New Registrations</value>
  </data>
  <data name="Allow Persistent Login" xml:space="preserve">
    <value>Allow Persistent Login</value>
  </data>
  <data name="Are you sure you want to delete the host/domain name mapping {0}" xml:space="preserve">
    <value>Are you sure you want to delete the host/domain name mapping {0}</value>
  </data>
  <data name="Back to site list" xml:space="preserve">
    <value>Back to site list</value>
  </data>
  <data name="Before you can Log in, we need to confirm that the email address you provided is valid. We sent an email to the address you provided with a link that you need to click in order to confirm your email address is valid." xml:space="preserve">
    <value>Before you can Log in, we need to confirm that the email address you provided is valid. We sent an email to the address you provided with a link that you need to click in order to confirm your email address is valid.</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Default Email From Address" xml:space="preserve">
    <value>Default Email From Address</value>
  </data>
  <data name="Default Email From Name" xml:space="preserve">
    <value>Default Email From Name</value>
  </data>
  <data name="Email addresses (csv) to notify of new unapproved users" xml:space="preserve">
    <value>Email addresses (csv) to notify of new unapproved users</value>
  </data>
  <data name="Email Confirmed" xml:space="preserve">
    <value>Email Confirmed</value>
  </data>
  <data name="Facebook App Id" xml:space="preserve">
    <value>Facebook App Id</value>
  </data>
  <data name="Facebook App Secret" xml:space="preserve">
    <value>Facebook App Secret</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Google Client Id" xml:space="preserve">
    <value>Google Client Id</value>
  </data>
  <data name="Google Client Secret" xml:space="preserve">
    <value>Google Client Secret</value>
  </data>
  <data name="Host Name" xml:space="preserve">
    <value>Host Name</value>
  </data>
  <data name="Id:" xml:space="preserve">
    <value>Id:</value>
  </data>
  <data name="Login Info Bottom" xml:space="preserve">
    <value>Login Info Bottom</value>
  </data>
  <data name="Login Info Top" xml:space="preserve">
    <value>Login Info Top</value>
  </data>
  <data name="Microsoft Client Id" xml:space="preserve">
    <value>Microsoft Client Id</value>
  </data>
  <data name="Microsoft Client Secret" xml:space="preserve">
    <value>Microsoft Client Secret</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New Site" xml:space="preserve">
    <value>New Site</value>
  </data>
  <data name="Only Use Social Authentication" xml:space="preserve">
    <value>Only Use Social Authentication</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Please Click here to Log in" xml:space="preserve">
    <value>Please Click here to Log in</value>
  </data>
  <data name="Please Confirm Email Address" xml:space="preserve">
    <value>Please Confirm Email Address</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Postal Code" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Preferred Host Name" xml:space="preserve">
    <value>Preferred Host Name</value>
  </data>
  <data name="Public Email" xml:space="preserve">
    <value>Public Email</value>
  </data>
  <data name="Re-Send Verification Email" xml:space="preserve">
    <value>Re-Send Verification Email</value>
  </data>
  <data name="Really Delete Users" xml:space="preserve">
    <value>Really Delete Users</value>
  </data>
  <data name="Recaptcha Private Key" xml:space="preserve">
    <value>Recaptcha Private Key</value>
  </data>
  <data name="Recaptcha Public Key" xml:space="preserve">
    <value>Recaptcha Public Key</value>
  </data>
  <data name="Registration Agreement" xml:space="preserve">
    <value>Registration Agreement</value>
  </data>
  <data name="Registration Preamble" xml:space="preserve">
    <value>Registration Preamble</value>
  </data>
  <data name="Require Approval Before Login" xml:space="preserve">
    <value>Require Approval Before Login</value>
  </data>
  <data name="Require Captcha On Login?" xml:space="preserve">
    <value>Require Captcha On Login?</value>
  </data>
  <data name="Require Captcha On Registration?" xml:space="preserve">
    <value>Require Captcha On Registration?</value>
  </data>
  <data name="Require Confirmed Email" xml:space="preserve">
    <value>Require Confirmed Email</value>
  </data>
  <data name="Require Confirmed Phone - if you check this, you need to configure SMS Settings" xml:space="preserve">
    <value>Require Confirmed Phone - if you check this, you need to configure SMS Settings</value>
  </data>
  <data name="Requires Authentication?" xml:space="preserve">
    <value>Requires Authentication?</value>
  </data>
  <data name="Requires SSL?" xml:space="preserve">
    <value>Requires SSL?</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Sms Client Id" xml:space="preserve">
    <value>Sms Client Id</value>
  </data>
  <data name="Sms From" xml:space="preserve">
    <value>Sms From</value>
  </data>
  <data name="Sms Secure Token" xml:space="preserve">
    <value>Sms Secure Token</value>
  </data>
  <data name="Smtp Password" xml:space="preserve">
    <value>Smtp Password</value>
  </data>
  <data name="Smtp Server" xml:space="preserve">
    <value>Smtp Server</value>
  </data>
  <data name="Smtp User" xml:space="preserve">
    <value>Smtp User</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Thank you for confirming your email." xml:space="preserve">
    <value>Thank you for confirming your email.</value>
  </data>
  <data name="Twitter Consumer Key" xml:space="preserve">
    <value>Twitter Consumer Key</value>
  </data>
  <data name="Twitter Consumer Secret" xml:space="preserve">
    <value>Twitter Consumer Secret</value>
  </data>
  <data name="Use Email For Login" xml:space="preserve">
    <value>Use Email For Login</value>
  </data>
</root>