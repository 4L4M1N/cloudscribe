@model cloudscribe.Core.Web.ViewModels.SiteSettings.SiteListViewModel

@{
    var FolderHostLabel = "Preferred Host Name";
    if (AppSettings.UseFoldersInsteadOfHostnamesForMultipleSites)
    {
        FolderHostLabel = "Folder";
    }
    
}
@section Styles {
    @Styles.Render("~/Content/themes/base/all.css")
    @Styles.Render("~/Content/themes/base/dialog.css")
}
<h2>@Model.Heading</h2>
<table class="table table-striped table-bordered">
    <tr>
        <th>
            @Html.ActionLink(CommonResources.NewSite, "NewSite", 
            new { slp = Model.Paging.CurrentPage },  
            new { @class = "btn btn-xs btn-default" })
        </th>
        <th>
            @CommonResources.SiteName
        </th>
        <th>
            @FolderHostLabel
        </th> 
    </tr>
@foreach (var item in Model.Sites)
{
    <tr class="@(item.IsServerAdminSite ? "adminsite danger" : "childsite")" >
        <td>
            @Html.ActionLink(CommonResources.BasicSettings, "SiteInfo",
            new { siteGuid = item.SiteGuid, slp = Model.Paging.CurrentPage },
            new { @class = "btn btn-xs btn-default" })
@if (!AppSettings.UseFoldersInsteadOfHostnamesForMultipleSites)
{
    @Html.ActionLink(CommonResources.DomainMappings, "SiteHostMappings", "SiteAdmin",
            new { siteGuid = item.SiteGuid, slp = Model.Paging.CurrentPage },
                new { @class = "btn btn-xs btn-default hostmap" })
}

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SiteName)
        </td>
        <td>
            @if (AppSettings.UseFoldersInsteadOfHostnamesForMultipleSites)
            {
                <a href="/@item.SiteFolderName" target="_blank">/@item.SiteFolderName</a>
            }
            else
            {
                if (item.PreferredHostName.Length > 0)
                {
                    <a href="http://@item.PreferredHostName" target="_blank">@item.PreferredHostName</a>  
                }
            }
        </td>
    </tr>
}
</table>
<div>
    @Html.Pager(Model.Paging.ItemsPerPage, Model.Paging.CurrentPage, Model.Paging.TotalItems).Options(o => o
            .Action("SiteList")
            
            .AddRouteValue("pageSize", Model.Paging.ItemsPerPage)
            
            .DisplayTemplate("Bootstrap3Pagination")
            .PageRouteValueKey("pageNumber")
            .MaxNrOfPages(Model.Paging.MaxPagerItems)

    )
</div>
